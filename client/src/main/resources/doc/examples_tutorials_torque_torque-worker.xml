<imageModule category="Image" creation="2013-11-16 09:03:03.212 CET" deleted="false" description="worker node for torque cluster" isBase="false" lastModified="2013-11-24 11:46:55.456 CET" loginUser="root" moduleReferenceUri="module/examples/images/ubuntu-12.04" parentUri="module/examples/tutorials/torque" platform="ubuntu" shortName="torque-worker" version="80">
   <parameters >
      <entry>
         <string>extra.disk.volatile</string>
         <parameter category="Cloud" description="Volatile extra disk in GB" isSet="false" mandatory="true" name="extra.disk.volatile" readonly="false" type="String" />
      </entry>
      <entry>
         <string>hostname</string>
         <parameter category="Output" description="hostname/ip of the image" isSet="false" mandatory="true" name="hostname" readonly="false" type="String" />
      </entry>
      <entry>
         <string>network</string>
         <parameter category="Cloud" description="Network type" isSet="true" mandatory="true" name="network" readonly="false" type="Enum">
            <enumValues length="2">
               <string>Public</string>
               <string>Private</string>
            </enumValues>
            <value>Public</value>
            <defaultValue>Public</defaultValue>
         </parameter>
      </entry>
      <entry>
         <string>instanceid</string>
         <parameter category="Output" description="Cloud instance id" isSet="false" mandatory="true" name="instanceid" readonly="false" type="String" />
      </entry>
   </parameters>
   <authz groupCreateChildren="false" groupDelete="false" groupGet="true" groupPost="false" groupPut="true" inheritedGroupMembers="true" owner="sixsq" ownerCreateChildren="true" ownerDelete="true" ownerGet="true" ownerPost="true" ownerPut="true" publicCreateChildren="false" publicDelete="false" publicGet="true" publicPost="false" publicPut="false">
      <groupMembers />
   </authz>
   <commit author="sixsq">
      <comment />
   </commit>
   <cloudNames length="2">
      <string>stratuslab</string>
      <string>default</string>
   </cloudNames>
   <runs />
   <targets >
      <target name="execute">#!/bin/bash -x

#
# ==========
#  Following section could be added an an image creation
#  recipe on those clouds that support image building.
# ==========
#

#
# install prerequisites
#
apt-get clean
apt-get update
apt-get -y install munge torque-mom

#
# update system
#
apt-get -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" -y upgrade

#
# ==========
#

#
# ensure torque isn't running
#
service torque-mom stop

#
# create normal user
#
adduser --quiet --disabled-password --gecos '' tuser

#
# setup SSH configuration
#
su - tuser -c 'mkdir -p /home/tuser/.ssh'
ss-get --timeout 480 master.1:user_id_rsa64 | base64 -d &gt;&gt; /home/tuser/.ssh/id_rsa
chown tuser:tuser /home/tuser/.ssh/id_rsa
chmod 0400 /home/tuser/.ssh/id_rsa

ssh-keyscan `ss-get master.1:hostname` &gt;&gt; /home/tuser/.ssh/known_hosts
ssh-keyscan `ss-get master.1:master_hostname` &gt;&gt; /home/tuser/.ssh/known_hosts

#
# setup the worker daemon with master's hostname
#
master_ip=`ss-get master.1:hostname`
cmd="import socket; print socket.getfqdn('$master_ip')"
export master_hostname=`python -c "$cmd"`

touch /var/spool/torque/mom_priv/config
echo "$master_ip $master_hostname torqueserver" &gt;&gt; /etc/hosts

#
# import the munge key from the server and start daemon
#
# publication of the munge key also signals that the torque
# server has been completely configured and workers can
# connect
#
export munge_key64=`ss-get --timeout 480 master.1:munge_key64`
echo $munge_key64 | base64 -d &gt; /etc/munge/munge.key
chown munge:munge /etc/munge/munge.key
chmod 0400 /etc/munge/munge.key
service munge start

#
# start the worker daemon; this tends to randomly fail
# retry multiple times to start daemon
#
PIDFILE=/var/spool/torque/mom_priv/mom.lock
NEXT_WAIT_TIME=0
RC=1
until [ $RC -eq 0 ] || [ $NEXT_WAIT_TIME -eq 9 ]; do
  sleep $(( NEXT_WAIT_TIME++ ))
  service torque-mom stop
  if [ -f ${PIDFILE} ]; then
    kill `cat ${PIDFILE}`
    rm -f ${PIDFILE}
  fi
  service torque-mom start
  sleep 10  # give daemon time to fail
  ps `cat ${PIDFILE}`
  RC=$?
done
</target>
   </targets>
   <packages />
   <prerecipe />
   <recipe />
   <cloudImageIdentifiers />
</imageModule>

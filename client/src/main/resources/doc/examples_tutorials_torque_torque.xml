<deploymentModule category="Deployment" creation="2013-10-30 10:54:54.242 CET" deleted="false" description="Torque Batch Cluster" lastModified="2013-11-24 11:46:56.254 CET" parentUri="module/examples/tutorials/torque" shortName="torque" version="84">
   <parameters />
   <authz groupCreateChildren="false" groupDelete="false" groupGet="true" groupPost="true" groupPut="true" inheritedGroupMembers="true" owner="sixsq" ownerCreateChildren="true" ownerDelete="true" ownerGet="true" ownerPost="true" ownerPut="true" publicCreateChildren="false" publicDelete="false" publicGet="true" publicPost="true" publicPut="false">
      <groupMembers />
   </authz>
   <commit author="">
      <comment />
   </commit>
   <cloudNames length="2">
      <string>stratuslab</string>
      <string>default</string>
   </cloudNames>
   <runs />
   <nodes >
      <entry>
         <string>worker</string>
         <node cloudService="default" creation="2013-10-30 10:54:54.242 CET" deleted="false" imageUri="module/examples/tutorials/torque/torque-worker" multiplicity="2" name="worker" network="Public">
            <parameters />
            <parameterMappings />
            <image category="Image" creation="2013-11-16 09:03:03.212 CET" deleted="false" description="worker node for torque cluster" isBase="false" lastModified="2013-11-24 11:46:55.456 CET" loginUser="root" moduleReferenceUri="module/examples/images/ubuntu-12.04" name="examples/tutorials/torque/torque-worker" parentUri="module/examples/tutorials/torque" platform="ubuntu" shortName="torque-worker" version="80">
               <parameters >
                  <entry>
                     <string>extra.disk.volatile</string>
                     <parameter category="Cloud" description="Volatile extra disk in GB" isSet="false" mandatory="true" name="extra.disk.volatile" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>stratuslab.disks.bus.type</string>
                     <parameter category="stratuslab" description="VM disks bus type" isSet="true" mandatory="true" name="stratuslab.disks.bus.type" readonly="false" type="Enum">
                        <enumValues length="2">
                           <string>virtio</string>
                           <string>scsi</string>
                        </enumValues>
                        <value>virtio</value>
                        <defaultValue>virtio</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>CC-IN2P3.instance.type</string>
                     <parameter category="CC-IN2P3" description="Instance type (flavor)" isSet="true" mandatory="true" name="CC-IN2P3.instance.type" readonly="false" type="String">
                        <value>m1.tiny</value>
                        <defaultValue>m1.tiny</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>stratuslab.instance.type</string>
                     <parameter category="stratuslab" description="Cloud instance type" isSet="true" mandatory="true" name="stratuslab.instance.type" readonly="false" type="Enum">
                        <enumValues length="7">
                           <string>m1.small</string>
                           <string>c1.medium</string>
                           <string>m1.large</string>
                           <string>m1.xlarge</string>
                           <string>c1.xlarge</string>
                           <string>t1.micro</string>
                           <string>standard.xsmall</string>
                        </enumValues>
                        <value>m1.large</value>
                        <defaultValue>m1.large</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>LLR.cpu</string>
                     <parameter category="LLR" description="Requested CPUs" isSet="false" mandatory="true" name="LLR.cpu" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>hostname</string>
                     <parameter category="Output" description="hostname/ip of the image" isSet="false" mandatory="true" name="hostname" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>LLR.ram</string>
                     <parameter category="LLR" description="Requested RAM (in GB)" isSet="false" mandatory="true" name="LLR.ram" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>stratuslab.ram</string>
                     <parameter category="stratuslab" description="Requested RAM (in GB)" isSet="true" mandatory="true" name="stratuslab.ram" readonly="false" type="String">
                        <value>2</value>
                        <defaultValue>2</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>network</string>
                     <parameter category="Cloud" description="Network type" isSet="true" mandatory="true" name="network" readonly="false" type="Enum">
                        <enumValues length="2">
                           <string>Public</string>
                           <string>Private</string>
                        </enumValues>
                        <value>Public</value>
                        <defaultValue>Public</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>LLR.instance.type</string>
                     <parameter category="LLR" description="Cloud instance type" isSet="true" mandatory="true" name="LLR.instance.type" readonly="false" type="Enum">
                        <enumValues length="7">
                           <string>m1.small</string>
                           <string>c1.medium</string>
                           <string>m1.large</string>
                           <string>m1.xlarge</string>
                           <string>c1.xlarge</string>
                           <string>t1.micro</string>
                           <string>standard.xsmall</string>
                        </enumValues>
                        <value>m1.small</value>
                        <defaultValue>m1.small</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>CC-IN2P3.security.groups</string>
                     <parameter category="CC-IN2P3" description="Security Groups (comma separated list)" isSet="true" mandatory="true" name="CC-IN2P3.security.groups" readonly="false" type="String">
                        <value>default</value>
                        <defaultValue>default</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>LLR.disks.bus.type</string>
                     <parameter category="LLR" description="VM disks bus type" isSet="true" mandatory="true" name="LLR.disks.bus.type" readonly="false" type="Enum">
                        <enumValues length="2">
                           <string>virtio</string>
                           <string>scsi</string>
                        </enumValues>
                        <value>virtio</value>
                        <defaultValue>virtio</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>stratuslab.cpu</string>
                     <parameter category="stratuslab" description="Requested CPUs" isSet="true" mandatory="true" name="stratuslab.cpu" readonly="false" type="String">
                        <value>2</value>
                        <defaultValue>2</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>instanceid</string>
                     <parameter category="Output" description="Cloud instance id" isSet="false" mandatory="true" name="instanceid" readonly="false" type="String" />
                  </entry>
               </parameters>
               <authz groupCreateChildren="false" groupDelete="false" groupGet="true" groupPost="false" groupPut="false" inheritedGroupMembers="true" owner="sixsq" ownerCreateChildren="true" ownerDelete="true" ownerGet="true" ownerPost="true" ownerPut="true" publicCreateChildren="false" publicDelete="false" publicGet="true" publicPost="false" publicPut="false">
                  <groupMembers />
               </authz>
               <commit author="sixsq">
                  <comment />
               </commit>
               <targets >
                  <target name="execute">#!/bin/bash -x

#
# ==========
#  Following section could be added an an image creation
#  recipe on those clouds that support image building.
# ==========
#

#
# install prerequisites
#
apt-get clean
apt-get update
apt-get -y install munge torque-mom

#
# update system
#
apt-get -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" -y upgrade

#
# ==========
#

#
# create normal user
#
adduser --quiet --uid 1000 --disabled-password --gecos '' tuser

#
# import the munge key from the server and start daemon
#
export munge_key64=`ss-get --timeout 480 master.1:munge_key64`
echo $munge_key64 | base64 -d &gt; /etc/munge/munge.key
chown munge:munge /etc/munge/munge.key
chmod 0400 /etc/munge/munge.key
service munge start

#
# setup the worker daemon with master's hostname
#
master_ip=`ss-get master.1:hostname`
cmd="import socket; print socket.getfqdn('$master_ip')"
export master_hostname=`python -c "$cmd"`

echo "\$pbsserver " $master_hostname &gt; /var/spool/torque/mom_priv/config

#
# start the worker daemon
#
service torque-mom restart

#
# setup SSH configuration
#
su - tuser -c 'mkdir -p /home/tuser/.ssh'
ss-get --timeout 480 master.1:user_id_rsa64 | base64 -d &gt;&gt; /home/tuser/.ssh/id_rsa
chown tuser:tuser /home/tuser/.ssh/id_rsa
chmod 0400 /home/tuser/.ssh/id_rsa

ssh-keyscan `ss-get master.1:hostname` &gt;&gt; /home/tuser/.ssh/known_hosts
ssh-keyscan `ss-get master.1:master_hostname` &gt;&gt; /home/tuser/.ssh/known_hosts</target>
               </targets>
               <packages />
               <prerecipe />
               <recipe />
               <cloudImageIdentifiers />
            </image>
         </node>
      </entry>
      <entry>
         <string>master</string>
         <node cloudService="default" creation="2013-10-30 10:54:54.242 CET" deleted="false" imageUri="module/examples/tutorials/torque/torque-master" multiplicity="1" name="master" network="Public">
            <parameters />
            <parameterMappings />
            <image category="Image" creation="2013-11-16 11:03:32.474 CET" deleted="false" description="master node for torque cluster" isBase="false" lastModified="2013-11-24 11:46:55.238 CET" loginUser="root" moduleReferenceUri="module/examples/images/ubuntu-12.04" name="examples/tutorials/torque/torque-master" parentUri="module/examples/tutorials/torque" platform="ubuntu" shortName="torque-master" version="79">
               <parameters >
                  <entry>
                     <string>extra.disk.volatile</string>
                     <parameter category="Cloud" description="Volatile extra disk in GB" isSet="false" mandatory="true" name="extra.disk.volatile" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>stratuslab.disks.bus.type</string>
                     <parameter category="stratuslab" description="VM disks bus type" isSet="true" mandatory="true" name="stratuslab.disks.bus.type" readonly="false" type="Enum">
                        <enumValues length="2">
                           <string>virtio</string>
                           <string>scsi</string>
                        </enumValues>
                        <value>virtio</value>
                        <defaultValue>virtio</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>CC-IN2P3.instance.type</string>
                     <parameter category="CC-IN2P3" description="Instance type (flavor)" isSet="true" mandatory="true" name="CC-IN2P3.instance.type" readonly="false" type="String">
                        <value>m1.tiny</value>
                        <defaultValue>m1.tiny</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>stratuslab.instance.type</string>
                     <parameter category="stratuslab" description="Cloud instance type" isSet="true" mandatory="true" name="stratuslab.instance.type" readonly="false" type="Enum">
                        <enumValues length="7">
                           <string>m1.small</string>
                           <string>c1.medium</string>
                           <string>m1.large</string>
                           <string>m1.xlarge</string>
                           <string>c1.xlarge</string>
                           <string>t1.micro</string>
                           <string>standard.xsmall</string>
                        </enumValues>
                        <value>m1.large</value>
                        <defaultValue>m1.large</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>LLR.cpu</string>
                     <parameter category="LLR" description="Requested CPUs" isSet="false" mandatory="true" name="LLR.cpu" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>munge_key64</string>
                     <parameter category="Output" description="base64 encoded munge key" isSet="false" mandatory="false" name="munge_key64" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>hostname</string>
                     <parameter category="Output" description="hostname/ip of the image" isSet="false" mandatory="true" name="hostname" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>user_id_rsa64</string>
                     <parameter category="Output" description="base64 encoded ssh private key for user" isSet="false" mandatory="false" name="user_id_rsa64" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>LLR.ram</string>
                     <parameter category="LLR" description="Requested RAM (in GB)" isSet="false" mandatory="true" name="LLR.ram" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>stratuslab.ram</string>
                     <parameter category="stratuslab" description="Requested RAM (in GB)" isSet="true" mandatory="true" name="stratuslab.ram" readonly="false" type="String">
                        <value>2</value>
                        <defaultValue>2</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>LLR.instance.type</string>
                     <parameter category="LLR" description="Cloud instance type" isSet="true" mandatory="true" name="LLR.instance.type" readonly="false" type="Enum">
                        <enumValues length="7">
                           <string>m1.small</string>
                           <string>c1.medium</string>
                           <string>m1.large</string>
                           <string>m1.xlarge</string>
                           <string>c1.xlarge</string>
                           <string>t1.micro</string>
                           <string>standard.xsmall</string>
                        </enumValues>
                        <value>m1.small</value>
                        <defaultValue>m1.small</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>network</string>
                     <parameter category="Cloud" description="Network type" isSet="true" mandatory="true" name="network" readonly="false" type="Enum">
                        <enumValues length="2">
                           <string>Public</string>
                           <string>Private</string>
                        </enumValues>
                        <value>Public</value>
                        <defaultValue>Public</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>master_hostname</string>
                     <parameter category="Output" description="hostname as name, not IP address" isSet="false" mandatory="false" name="master_hostname" readonly="false" type="String" />
                  </entry>
                  <entry>
                     <string>CC-IN2P3.security.groups</string>
                     <parameter category="CC-IN2P3" description="Security Groups (comma separated list)" isSet="true" mandatory="true" name="CC-IN2P3.security.groups" readonly="false" type="String">
                        <value>default</value>
                        <defaultValue>default</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>LLR.disks.bus.type</string>
                     <parameter category="LLR" description="VM disks bus type" isSet="true" mandatory="true" name="LLR.disks.bus.type" readonly="false" type="Enum">
                        <enumValues length="2">
                           <string>virtio</string>
                           <string>scsi</string>
                        </enumValues>
                        <value>virtio</value>
                        <defaultValue>virtio</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>stratuslab.cpu</string>
                     <parameter category="stratuslab" description="Requested CPUs" isSet="true" mandatory="true" name="stratuslab.cpu" readonly="false" type="String">
                        <value>2</value>
                        <defaultValue>2</defaultValue>
                     </parameter>
                  </entry>
                  <entry>
                     <string>instanceid</string>
                     <parameter category="Output" description="Cloud instance id" isSet="false" mandatory="true" name="instanceid" readonly="false" type="String" />
                  </entry>
               </parameters>
               <authz groupCreateChildren="false" groupDelete="false" groupGet="true" groupPost="false" groupPut="false" inheritedGroupMembers="true" owner="sixsq" ownerCreateChildren="true" ownerDelete="true" ownerGet="true" ownerPost="true" ownerPut="true" publicCreateChildren="false" publicDelete="false" publicGet="true" publicPost="false" publicPut="false">
                  <groupMembers />
               </authz>
               <commit author="sixsq">
                  <comment />
               </commit>
               <targets >
                  <target name="execute">#!/bin/bash -x

#
# ==========
#  Following section could be put into image recipe for those
#  clouds that support image creation.
# ==========
#

#
# install prerequisites
#
apt-get clean
apt-get update
apt-get -y install munge torque-scheduler torque-server

#
# update system
#
apt-get -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" -y upgrade

#
# ==========
#

#
# create normal user
#
adduser --quiet --uid 1000 --disabled-password --gecos '' tuser

#
# master hostname (must be a name!)
#
master_ip=`ss-get --timeout 480 master.1:hostname`
cmd="import socket; print socket.getfqdn('$master_ip')"
export master_hostname=`python -c "$cmd"`

ss-set master_hostname $master_hostname

#
# initialize the server configuration with hostname
#
touch /var/spool/torque/server_priv/nodes
echo $master_hostname &gt;  /etc/torque/server_name

#
# configure and start munge service
#
create-munge-key
service munge start

#
# set parameter with munge key to be shared with workers
# value is the base64 encoded value of the binary file
#
ss-set munge_key64 `cat /etc/munge/munge.key | base64 --wrap 0`

#
# ensure server is stopped, remove existing database
#
service torque-server stop
rm -f /var/spool/torque/server_priv/nodes
rm -f /var/spool/torque/server_priv/serverdb

#
# minimal setup of the batch system and queues
#
cp /usr/share/doc/torque-common/torque.setup .
chmod a+x torque.setup
./torque.setup root $master_hostname

#
# ensure again that server is stopped
#
service torque-server stop

#
# pull in node names of all of the workers
#
rm -f /var/spool/torque/server_priv/nodes
for (( i=1; i &lt;= `ss-get worker.1:multiplicity`; i++ )); do
  worker_ip=`ss-get --timeout 480 worker.$i:hostname`
  cmd="import socket; print socket.getfqdn('$worker_ip')"
  worker_hostname=`python -c "$cmd"`
  echo $worker_hostname &gt;&gt; /var/spool/torque/server_priv/nodes
done

#
# restart the server so that it will see all workers
#
service torque-server restart

#
# now start the torque scheduler (simple FIFO)
#
service torque-scheduler restart

#
# configuration for ssh access between nodes as user
#
su - tuser -c 'mkdir -p /home/tuser/.ssh'
su - tuser -c 'chmod 0700 /home/tuser/.ssh'
su - tuser -c 'ssh-keygen -f /home/tuser/.ssh/id_rsa -N ""'

cp /root/.ssh/authorized_keys /home/tuser/.ssh/authorized_keys
chown tuser:tuser /home/tuser/.ssh/authorized_keys
chmod 0600 /home/tuser/.ssh/authorized_keys
su - tuser -c 'cat /home/tuser/.ssh/id_rsa.pub &gt;&gt; /home/tuser/.ssh/authorized_keys'

ss-set user_id_rsa64 `cat /home/tuser/.ssh/id_rsa | base64 --wrap 0`</target>
               </targets>
               <packages />
               <prerecipe />
               <recipe />
               <cloudImageIdentifiers />
            </image>
         </node>
      </entry>
   </nodes>
</deploymentModule>

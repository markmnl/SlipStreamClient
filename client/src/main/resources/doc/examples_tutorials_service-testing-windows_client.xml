<imageModule category="Image" creation="2013-12-18 15:09:00.471 UTC" deleted="false" description="Windows web client tests server connectivity and verifies content (For Exoscale: Please ensure that port 5985 is open in your security group named &quot;default&quot;)" isBase="false" isLatestVersion="true" lastModified="2015-07-02 15:50:00.292 UTC" loginUser="administrator" logoLink="" moduleReferenceUri="module/examples/images/windows-server-2012" parentUri="module/examples/tutorials/service-testing-windows" platform="windows" shortName="client" version="1820">
   <authz groupCreateChildren="false" groupDelete="false" groupGet="true" groupPost="false" groupPut="true" inheritedGroupMembers="true" owner="sixsq" ownerCreateChildren="true" ownerDelete="true" ownerGet="true" ownerPost="true" ownerPut="true" publicCreateChildren="false" publicDelete="false" publicGet="true" publicPost="false" publicPut="false">
      <groupMembers>
         </groupMembers>
   </authz>
   <commit author="sixsq">
      <comment>Initial version of this module</comment>
   </commit>
   <cloudNames length="12">
      </cloudNames>
   <runs count="0" limit="20" offset="0" totalCount="0" />
   <targets>
      <target name="onvmadd" />
      <target name="execute"># Wait for the metadata to be resolved
$web_server_ip = ss-get --timeout 360 webserver.hostname
$web_server_port = ss-get --timeout 360 webserver.port
ss-get --timeout 360 webserver.ready

$wc = New-Object System.Net.WebClient;

$url = "http://$web_server_ip"+":$web_server_port/data.txt"
$file = "$pwd\data.txt"

$wc.DownloadFile($url,$file)
$success = $?

$data = ""
try{ $data = [Io.File]::ReadAllText($file) }catch{}

if ($success){ss-set statecustom "OK: $data"} else{ss-abort "Could not get the test file: $url"}

</target>
      <target name="report">Copy-Item -Path $pwd\data.txt -Destination slipstream\reports\
</target>
      <target name="onvmremove" />
   </targets>
   <packages />
   <prerecipe />
   <recipe />
   <cloudImageIdentifiers />
   <parameters>
      <entry>
         <string>webserver.ready</string>
         <parameter category="Input" description="Server ready to recieve connections" isSet="false" mandatory="false" name="webserver.ready" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>network</string>
         <parameter category="Cloud" description="Network type" isSet="true" mandatory="true" name="network" order="0" order_="0" readonly="false" type="Enum">
            <enumValues length="2">
               <string>Public</string>
               <string>Private</string>
            </enumValues>
            <value>Public</value>
            <defaultValue>Public</defaultValue>
         </parameter>
      </entry>
      <entry>
         <string>hostname</string>
         <parameter category="Output" description="hostname/ip of the image" isSet="false" mandatory="true" name="hostname" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>webserver.port</string>
         <parameter category="Input" description="Port on which the web server listens" isSet="false" mandatory="false" name="webserver.port" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>extra.disk.volatile</string>
         <parameter category="Cloud" description="Volatile extra disk in GB" isSet="false" mandatory="true" name="extra.disk.volatile" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>instanceid</string>
         <parameter category="Output" description="Cloud instance id" isSet="false" mandatory="true" name="instanceid" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>webserver.hostname</string>
         <parameter category="Input" description="Server hostname" isSet="false" mandatory="false" name="webserver.hostname" order="0" order_="0" readonly="false" type="String" />
      </entry>
      </parameters>
   <notes length="0" />
</imageModule>
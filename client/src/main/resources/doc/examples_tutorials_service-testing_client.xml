<imageModule category="Image" creation="2013-11-16 08:44:17.872 CET" deleted="false" description="Web client tests server connectivity and verifies content." isBase="false" lastModified="2013-11-24 11:46:55.79 CET" loginUser="root" moduleReferenceUri="module/examples/images/ubuntu-12.04" parentUri="module/examples/tutorials/service-testing" platform="ubuntu" shortName="client" version="78">
   <parameters >
      <entry>
         <string>extra.disk.volatile</string>
         <parameter category="Cloud" description="Volatile extra disk in GB" isSet="false" mandatory="true" name="extra.disk.volatile" readonly="false" type="String" />
      </entry>
      <entry>
         <string>webserver.port</string>
         <parameter category="Input" description="Port on which the web server listens" isSet="false" mandatory="false" name="webserver.port" readonly="false" type="String" />
      </entry>
      <entry>
         <string>webserver.ready</string>
         <parameter category="Input" description="Server ready to recieve connections" isSet="false" mandatory="false" name="webserver.ready" readonly="false" type="String" />
      </entry>
      <entry>
         <string>hostname</string>
         <parameter category="Output" description="hostname/ip of the image" isSet="false" mandatory="true" name="hostname" readonly="false" type="String" />
      </entry>
      <entry>
         <string>network</string>
         <parameter category="Cloud" description="Network type" isSet="true" mandatory="true" name="network" readonly="false" type="Enum">
            <enumValues length="2">
               <string>Public</string>
               <string>Private</string>
            </enumValues>
            <value>Public</value>
            <defaultValue>Public</defaultValue>
         </parameter>
      </entry>
      <entry>
         <string>instanceid</string>
         <parameter category="Output" description="Cloud instance id" isSet="false" mandatory="true" name="instanceid" readonly="false" type="String" />
      </entry>
      <entry>
         <string>webserver.hostname</string>
         <parameter category="Input" description="Server hostname" isSet="false" mandatory="false" name="webserver.hostname" readonly="false" type="String" />
      </entry>
   </parameters>
   <authz groupCreateChildren="false" groupDelete="false" groupGet="true" groupPost="false" groupPut="true" inheritedGroupMembers="true" owner="sixsq" ownerCreateChildren="true" ownerDelete="true" ownerGet="true" ownerPost="false" ownerPut="true" publicCreateChildren="false" publicDelete="false" publicGet="true" publicPost="false" publicPut="false">
      <groupMembers />
   </authz>
   <commit author="sixsq">
      <comment />
   </commit>
   <cloudNames length="2">
      <string>stratuslab</string>
      <string>default</string>
   </cloudNames>
   <runs />
   <targets >
      <target name="execute" runInBackground="false">#!/bin/sh -xe
# Wait for the metadata to be resolved
web_server_ip=$(ss-get --timeout 360 webserver.hostname)
web_server_port=$(ss-get --timeout 360 webserver.port)
ss-get --timeout 360 webserver.ready

# Execute the test
ENDPOINT=http://${web_server_ip}:${web_server_port}/data.txt
wget -t 2 -O /tmp/data.txt ${ENDPOINT}
[ "$?" = "0" ] &amp; ss-set statecustom "OK: $(cat /tmp/data.txt)" || ss-abort "Could not get the test file: ${ENDPOINT}"
</target>
      <target name="report" runInBackground="false">#!/bin/sh -x
cp /tmp/data.txt $SLIPSTREAM_REPORT_DIR</target>
   </targets>
   <packages />
   <prerecipe />
   <recipe />
   <cloudImageIdentifiers />
</imageModule>
